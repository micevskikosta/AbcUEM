//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AbcUEM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AbcUEMDbEntities : DbContext
    {
        public AbcUEMDbEntities()
            : base("name=AbcUEMDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Pages> Pages { get; set; }
        public virtual DbSet<Translates> Translates { get; set; }
        public virtual DbSet<Calendar> Calendar { get; set; }
        public virtual DbSet<GalleryDetails> GalleryDetails { get; set; }
        public virtual DbSet<GalleryMaster> GalleryMaster { get; set; }
    
        public virtual ObjectResult<GetRoles_Result> GetRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoles_Result>("GetRoles");
        }
    
        public virtual ObjectResult<GetUsers_Result> GetUsers(Nullable<int> pageIndex, Nullable<int> itemsPerPage, string seachString)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var itemsPerPageParameter = itemsPerPage.HasValue ?
                new ObjectParameter("ItemsPerPage", itemsPerPage) :
                new ObjectParameter("ItemsPerPage", typeof(int));
    
            var seachStringParameter = seachString != null ?
                new ObjectParameter("SeachString", seachString) :
                new ObjectParameter("SeachString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers_Result>("GetUsers", pageIndexParameter, itemsPerPageParameter, seachStringParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetUsersTotal(string seachString)
        {
            var seachStringParameter = seachString != null ?
                new ObjectParameter("SeachString", seachString) :
                new ObjectParameter("SeachString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetUsersTotal", seachStringParameter);
        }
    
        public virtual int UpdateActiveUser(string id, Nullable<bool> active)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateActiveUser", idParameter, activeParameter);
        }
    
        public virtual ObjectResult<GetTranslate_Result> GetTranslate(Nullable<int> pageId, string tagId)
        {
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            var tagIdParameter = tagId != null ?
                new ObjectParameter("TagId", tagId) :
                new ObjectParameter("TagId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTranslate_Result>("GetTranslate", pageIdParameter, tagIdParameter);
        }
    }
}
